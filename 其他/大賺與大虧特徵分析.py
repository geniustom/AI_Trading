# -*- coding: utf-8 -*-
import lib.dblib as dl
import lib.indicator as il
import lib.strategy_lib as sl
import lib.tracking as tl

import numpy as np
import pylab as pl
import scipy as sc
import scipy.linalg as la
import matplotlib.pyplot as plt
import pandas as pd


LoseDate=['10/07/22','10/07/26','10/07/29','10/08/12','10/08/17','10/08/20','10/08/24','10/08/26','10/08/27','10/09/08','10/09/10','10/09/20','10/09/23','10/09/24','10/09/29','10/10/01','10/10/13','10/10/15','10/10/19','10/10/21','10/10/26','10/10/27','10/11/08','10/11/11','10/11/15','10/11/17','10/11/19','10/11/29','10/12/02','10/12/14','10/12/29','10/12/30','11/01/12','11/01/13','11/01/24','11/01/25','11/02/16','11/02/17','11/03/04','11/03/07','11/03/16','11/03/17','11/03/24','11/03/25','11/03/30','11/03/31','11/04/08','11/04/11','11/04/14','11/04/18','11/04/26','11/04/29','11/05/04','11/05/06','11/05/13','11/05/30','11/06/17','11/06/21','11/06/22','11/06/23','11/06/24','11/06/27','11/07/01','11/07/04','11/07/05','11/07/07','11/07/13','11/07/14','11/07/18','11/07/22','11/07/28','11/08/03','11/08/10','11/08/26','11/08/30','11/08/31','11/09/02','11/09/08','11/09/09','11/09/20','11/09/23','11/10/06','11/10/07','11/10/12','11/10/14','11/10/21','11/10/25','11/11/07','11/11/08','11/11/25','11/12/13','11/12/16','11/12/22','11/12/27','12/01/04','12/01/06','12/01/12','12/01/18','12/02/03','12/02/07','12/02/09','12/02/14','12/02/20','12/03/03','12/03/07','12/03/08','12/03/09','12/03/14','12/03/15','12/03/16','12/03/19','12/03/23','12/03/28','12/04/02','12/04/05','12/04/09','12/04/10','12/04/12','12/04/16','12/04/19','12/04/23','12/04/24','12/05/09','12/05/10','12/06/05','12/06/06','12/06/11','12/06/13','12/06/22','12/07/02','12/07/06','12/07/13','12/07/26','12/08/08','12/08/10','12/08/13','12/08/20','12/08/29','12/08/30','12/08/31','12/09/06','12/09/17','12/09/19','12/09/21','12/09/26','12/10/12','12/10/15','12/10/24','12/10/29','12/10/30','12/10/31','12/11/02','12/11/07','12/11/08','12/11/15','12/11/16','12/11/20','12/11/22','12/11/26','12/12/03','12/12/04','12/12/11','12/12/24','12/12/27','13/01/07','13/01/16','13/01/18','13/01/24','13/01/30','13/01/31','13/02/01','13/02/06','13/02/22','13/02/26','13/03/06','13/03/20','13/03/21','13/03/25','13/04/02','13/04/09','13/04/15','13/04/18','13/04/24','13/05/09','13/05/10','13/05/14','13/05/20','13/05/28','13/05/31','13/06/10','13/06/19','13/06/21','13/06/24','13/06/25','13/06/26','13/07/04','13/07/12','13/07/25','13/07/26','13/08/02','13/08/09','13/08/15','13/08/26','13/09/09','13/09/11','13/09/30','13/10/04','13/10/09','13/10/15','13/10/16','13/10/30','13/11/12','13/11/14','13/11/20','13/12/11','13/12/19','13/12/23','14/01/09','14/01/14','14/01/17','14/01/20','14/02/07','14/02/10','14/02/17','14/02/19','14/03/03','14/03/04','14/03/11','14/03/18','14/04/03','14/04/11','14/04/14','14/04/17','14/04/29','14/05/07','14/05/12','14/05/16','14/06/03','14/06/13','14/06/23','14/06/25','14/07/02','14/07/15','14/07/24','14/07/28','14/08/01','14/08/06','14/08/07','14/08/08','14/08/14','14/08/25','14/08/26','14/08/29','14/09/03','14/09/15','14/09/18','14/09/23','14/09/24','14/09/26','14/09/30','14/10/01','14/10/06','14/10/09','14/10/16','14/10/21','14/10/23']
WinDate=['10/07/14','10/07/20','10/07/27','10/07/28','10/08/02','10/08/10','10/08/13','10/08/16','10/08/25','10/08/31','10/09/01','10/09/03','10/09/13','10/09/15','10/09/16','10/09/17','10/10/08','10/10/12','10/10/14','10/10/18','10/10/20','10/10/25','10/11/03','10/11/12','10/12/01','10/12/21','10/12/23','10/12/31','11/01/05','11/01/07','11/01/10','11/01/11','11/01/17','11/01/18','11/01/19','11/01/26','11/02/08','11/02/09','11/02/10','11/02/18','11/02/23','11/03/03','11/03/10','11/03/15','11/03/21','11/03/29','11/04/01','11/04/06','11/04/12','11/04/13','11/04/15','11/04/20','11/04/21','11/04/28','11/05/05','11/05/09','11/05/12','11/05/16','11/05/19','11/05/31','11/06/01','11/06/03','11/06/10','11/06/14','11/06/16','11/06/20','11/06/29','11/07/06','11/07/12','11/07/15','11/07/20','11/07/26','11/07/29','11/08/04','11/08/05','11/08/08','11/08/09','11/08/11','11/08/12','11/08/15','11/08/16','11/08/17','11/08/18','11/08/22','11/08/23','11/08/24','11/08/25','11/09/01','11/09/06','11/09/07','11/09/13','11/09/14','11/09/16','11/09/19','11/09/22','11/09/26','11/09/27','11/09/29','11/10/04','11/10/05','11/10/11','11/10/13','11/10/20','11/10/24','11/10/26','11/10/27','11/10/28','11/11/03','11/11/10','11/11/16','11/11/18','11/11/21','11/11/29','11/11/30','11/12/01','11/12/06','11/12/15','11/12/21','11/12/23','11/12/30','12/01/02','12/01/10','12/01/13','12/01/16','12/01/17','12/02/08','12/02/13','12/02/15','12/02/16','12/02/17','12/02/22','12/02/29','12/03/05','12/03/13','12/03/20','12/03/26','12/03/29','12/03/30','12/04/03','12/04/11','12/04/13','12/04/20','12/05/02','12/05/11','12/05/15','12/05/16','12/05/25','12/05/29','12/06/01','12/06/07','12/06/15','12/07/10','12/07/12','12/07/18','12/07/19','12/07/23','12/07/27','12/08/01','12/08/09','12/08/27','12/09/03','12/09/12','12/09/14','12/10/11','12/10/19','12/10/23','12/10/26','12/11/09','12/11/13','12/11/23','12/11/30','12/12/05','12/12/13','12/12/25','13/01/10','13/01/14','13/01/17','13/01/29','13/02/04','13/03/04','13/03/05','13/03/18','13/03/29','13/04/08','13/04/19','13/05/08','13/05/23','13/06/18','13/06/20','13/06/28','13/07/01','13/07/03','13/07/08','13/07/09','13/07/11','13/07/19','13/07/23','13/07/30','13/07/31','13/08/06','13/08/16','13/08/20','13/08/27','13/08/29','13/08/30','13/09/02','13/09/16','13/09/23','13/10/03','13/10/11','13/10/14','13/10/18','13/10/23','13/11/01','13/11/13','13/11/21','13/11/29','13/12/30','14/01/03','14/01/15','14/01/24','14/01/27','14/02/11','14/02/12','14/03/06','14/03/25','14/03/27','14/04/18','14/04/25','14/04/28','14/04/30','14/05/21','14/05/22','14/05/28','14/06/26','14/06/30','14/07/01','14/07/10','14/07/22','14/07/25','14/07/29','14/07/31','14/08/05','14/08/18','14/08/19','14/08/22','14/09/02','14/09/11','14/09/16','14/09/22','14/09/25','14/10/03','14/10/15','14/10/17','14/10/24']
Win_ids=[]
Lose_ids=[]


try:
    print db.connstr
except:
    db = dl.DBConn(host="localhost",uid="sa",pwd="geniustom",cata="FutureHis")
    td=dl.TradeData(db.conn)


def scatter_matrix(mm):
    avgmm=[]
    for i in range(len(mm)):
        avgmm.append(np.mean(mm[i]))
    avgmm=np.array(avgmm)
    
    for i in range(len(mm.T)) :
        mm.T[i]-=avgmm
    
    return np.dot(mm,mm.T)


#===================================================
for i in range(len(LoseDate)):
    dayindi=il.indicatorGroup()
    dayindi=td.FetchDateByMem(LoseDate[i])
    v1=dayindi.get(u"指數波動")
    v2=dayindi.get(u"大台成交量")
    v3=dayindi.get(u"大台成交筆")
    v4=dayindi.get(u"大台散戶")
    v5=dayindi.get(u"大台主力")
    v6=dayindi.get(u"大台黑手")
    vector=[]
    if  len(v1)==300 and (v1[10]<1000):
        vector.extend(v1[0:15])
        vector.extend(v2[0:15])
        vector.extend(v3[0:15])
        vector.extend(v4[0:15])
        vector.extend(v5[0:15])
        vector.extend(v6[0:15])
        Lose_ids.append(vector)
Lose_ids=np.matrix(Lose_ids).T

#===================================================

for i in range(len(WinDate)):
    dayindi=il.indicatorGroup()
    dayindi=td.FetchDateByMem(WinDate[i])
    v1=dayindi.get(u"指數波動")
    v2=dayindi.get(u"大台成交量")
    v3=dayindi.get(u"大台成交筆")
    v4=dayindi.get(u"大台散戶")
    v5=dayindi.get(u"大台主力")
    v6=dayindi.get(u"大台黑手")
    vector=[]
    if  len(v1)==300 and (v1[10]<1000):
        vector.extend(v1[0:15])
        vector.extend(v2[0:15])
        vector.extend(v3[0:15])
        vector.extend(v4[0:15])
        vector.extend(v5[0:15])
        vector.extend(v6[0:15])
        Win_ids.append(vector)
Win_ids=np.matrix(Win_ids).T

#==========================取得SW=========================

Win_scatt=Win_ids
Win_Sw=scatter_matrix(Win_scatt)
Lose_scatt=Lose_ids
Lose_Sw=scatter_matrix(Lose_scatt)
SW=np.add(Win_Sw,Lose_Sw)

#==========================取得SB=========================
totalmatrix=np.hstack((Win_ids , Lose_ids))
m=[]
for i in range(len(totalmatrix)):
    m.append(np.mean(totalmatrix[i]))
    
m=np.matrix(m)
n1=len(Win_ids.T)
n2=len(Lose_ids.T)
m1=[]
for i in range(len(Win_ids)):
    m1.append(np.mean(Win_ids[i]))

m2=[]
for i in range(len(Lose_ids)):
    m2.append(np.mean(Lose_ids[i]))
    
m1=np.matrix(m1)
m2=np.matrix(m2)
sb1=n1*np.dot((m1-m).T,(m1-m))
sb2=n2*np.dot((m2-m).T,(m2-m))
SB=sb1+sb2   
SB=np.matrix(SB)

#==========================對SB做正交對角化=========================
Db,V=la.eig(SB)
Y=V[0:80,0:80]
sqrDb=np.sqrt(Db)* np.eye(len(Db))
Z=np.dot(Y,sqrDb)
SU=np.dot(np.dot(Z.T,SW),Z)
SU=np.matrix(SU)
Dw,U=la.eig(SU)  



#ev,lose_eig=la.eig(Lose_cov)  
#plt.plot(lose_eig.T)

'''
avgm=[]
for i in range(len(win_scatt)):
    avgm.append(np.mean(win_scatt[i]))
avgm=np.array(avgm)

for i in range(len(win_scatt.T)) :
    win_scatt.T[i]-=avgm
scattm= np.dot(win_scatt,win_scatt.T)
        
#plt.plot(win_scatt[10])        
plt.plot(avgm)    
'''




        
        